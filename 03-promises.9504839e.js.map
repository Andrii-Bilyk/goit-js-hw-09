{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBACvBD,SAASC,cAAc,yBAEtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEpCC,YAAW,KACPH,EAEJF,EAAQ,C,SAAEH,EAAUS,MAAAR,IAGlBG,EAAO,C,SAAEJ,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CAKbR,EAAOiB,iBAAiB,UAExB,SAAiBC,GAEfA,EAAMC,iBAEN,MAAMC,EAAcC,SAAShB,EAAOiB,MAAO,IACrCC,EAAoBF,SAASlB,EAAMmB,MAAO,IAC1CE,EAAYH,SAASjB,EAAKkB,MAAO,IAEvC,IAAK,IAAIG,EAAI,EAAGA,EAAIL,EAAaK,GAAK,EAEpCnB,EAAcmB,EAAI,EAAGF,EAAqBE,EAAID,GAC3CE,MAAMC,IAELC,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqBH,EAAIpB,eAAoBoB,EAAEX,UAAe,IAEvFe,OAAOJ,IAENC,EAAA9B,GAAS+B,OAAOG,QAAQ,sBAAoBL,EAAEpB,eAAoBoB,EAAEX,UAAe,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst submit = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    \n    const shouldResolve = Math.random() > 0.3;\n    \n      setTimeout(() => {\n      if (shouldResolve) {\n        \n      resolve({ position, delay });\n      } else {\n        \n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\nformEl.addEventListener('submit', onclick);\n\nfunction onclick(event) {\n  \n  event.preventDefault();\n\n  const amountValue = parseInt(amount.value, 10);\n  const initialDelayValue = parseInt(delay.value, 10);\n  const stepValue = parseInt(step.value, 10);\n\n  for (let i = 0; i < amountValue; i += 1) {\n  \n    createPromise(i + 1, initialDelayValue + (i * stepValue))\n      .then((result) => {\n        \n        Notiflix.Notify.success(`✅ Fulfilled promise ${result.position} in ${result.delay}ms`);\n      })\n      .catch((result) => {\n        \n        Notiflix.Notify.failure(`❌ Rejected promise ${result.position} in ${result.delay}ms`);\n      });\n  }\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","event","preventDefault","amountValue","parseInt","value","initialDelayValue","stepValue","i","then","result","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.9504839e.js.map"}